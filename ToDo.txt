* - первоочередные задачи

1) __old age__
1.3) должен работать с ярлыками и другими видами link'ов корректно (не удалять оригиналы, считая что ярплык это его копия)
1.4*) добавить фн-цию мердж
	1.4.1) Ќо сначало определить, могут ли папки быть смержены 
	1.4.1.1) определить полностью ли папки содержат файлы дубликаты [WIP]
	1.4.2) мерджинг лог (что было во что слилось) \ выбрать имя папки от куда брать имена \ или вообще индивидуально

2) __new age__
2.1) —делать кастомный вывод, а не "?" (см. 2.2.2)
2.2) ‘лаги
	2.2.1) выводить ли хеш-сумму
	2.2.2) выбирать тип хеш-суммы (или даже двойной дл€ избежани€ коллизий)
	2.2.2) тип вывода (?)
	2.2.3) рекурсивно обходить ли папки или нет [DONE]
2.3) ¬ыделить функции и тесты в отдельные фалы (?)
2.4) 

3) нарисовать и описать схему работы (безопасное копирование, перемещение и удаление)
4) (продвинутое) определ€ть какой файл мение поверждЄн (и повреждЄн ли вообще)
5) распаралелить поиск по каждой папке на процесс (в зависимости от €дерности компа) (?)


=========
распаралелирвание
обработка аргументов утилиты:
	рекурс\не рекурс
	сравнивать две (и более) папки на дубликаты ( и различия заодно (?) )
		слить [и выделить разность (хз) ]

GUI?

возможность удалять дубликаты так:
{
/1/A.txt
/2/A.txt
/1/2/A.txt

/1/B.txt
/2/B.txt
/1/2/B.txt

оставить один экземпляр дубликатов которые самые страые/новые \ лежат в папке X (выбрать)
}


сделать супер быстрой (через sum by ассеблер? —мотри как он собираеться в асм \ профилируй ...)



=======

ј стоит ли делать если уже есть? —делаю лучше и удобней для себя
https://ru.wikipedia.org/wiki/Fdupes
https://github.com/jbruchon/jdupes

и просто для практики в раст