* - первоочередные задачи
WIP x 1
DONE x 1

Сложности: [easy]\[mid]\[hard]
Необходимость [maybe]\[want]\[need]\[necc]

----------------------------------------------
1) __old age__
1.3)[hard][necc] должен работать с ярлыками и другими видами link'ов корректно (не удалять оригиналы, считая что ярплык это его копия)
1.4*)[hard][necc] добавить фн-цию мердж ( слить [и выделить разность (хз) ] )
	1.4.1) Но сначало определить, могут ли папки быть смержены
	1.4.1.1)[WIP] определить полностью ли папки содержат файлы дубликаты 
	1.4.2) мерджинг лог (что было во что слилось) \ выбрать имя папки от куда брать имена \ или вообще индивидуально

2) __new age__
2.1)[maybe] сделать кастомный вывод, а не "?". Возможность выбирать тип вывода.
2.2) __Флаги\Аргументы__
	2.2.1)[easy] выводить ли хеш-сумму
	2.2.2)[want] выбирать тип хеш-суммы (или даже двойной для избежания коллизий)
	2.2.3)[DONE] рекурсивно обходить ли папки или нет 
	2.2.4)[necc][WIP] сравнивать две (и более) папки на дубликаты в аргуменах ( + и различия заодно (?) ) 
2.3)[want] Выделить функции и тесты в отдельные фалы (?)

3) нарисовать и описать схему работы (безопасное копирование, перемещение и удаление)
4) (продвинутое) определить какой файл мение поверждён (и повреждён ли вообще)
5) распаралелить поиск по каждой папке на процесс (в зависимости от ядерности компа) (?)
6)[want] GUI (?)
7) сделать супер быстрой {а разьве сейчас медленная?} (через sum by ассеблер? Cмотри как он собираеться в асм \ профилировать)

=========

возможность удалять дубликаты так:
{
/1/A.txt
/2/A.txt
/1/2/A.txt

/1/B.txt
/2/B.txt
/1/2/B.txt

будет возможность это выбрать: оставить один экземпляр дубликатов которые: самые страые/новые \ лежат в папке X \ имеет имя <regex>
}

=======

а стоит ли делать если уже есть? сделаю лучше и удобней для себя
https://ru.wikipedia.org/wiki/Fdupes
https://github.com/jbruchon/jdupes

и просто для практики в раст